{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\react-blog\\\\client\\\\src\\\\components\\\\post\\\\Post.jsx\";\nimport './post.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post\n}) {\n  const PF = \"http://localhost:5000/images/\";\n\n  // Check if post is undefined or null before accessing its properties\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // or return null, loading spinner, or error message\n  }\n\n  // Ensure post.categories is always an array\n  const categories = Array.isArray(post.categories) ? post.categories : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"postImg\",\n      src: PF + post.photo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCats\",\n        children: post.categories.map(c => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postCat\",\n          children: c.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${post._id}`,\n        className: \"link\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postTitle\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postDate\",\n        children: new Date(post.createdAt).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"postDesc\",\n      children: post.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Post","post","PF","children","fileName","_jsxFileName","lineNumber","columnNumber","categories","Array","isArray","className","photo","src","alt","map","c","name","to","_id","title","Date","createdAt","toDateString","desc","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/react-blog/client/src/components/post/Post.jsx"],"sourcesContent":["import './post.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Post({post}) {\r\n  const PF = \"http://localhost:5000/images/\"\r\n\r\n  // Check if post is undefined or null before accessing its properties\r\n  if (!post) {\r\n    return <div>Loading...</div>; // or return null, loading spinner, or error message\r\n  }\r\n\r\n  // Ensure post.categories is always an array\r\n  const categories = Array.isArray(post.categories) ? post.categories : [];\r\n\r\n\r\n  return (\r\n    <div className='post'>\r\n     {post.photo && <img className=\"postImg\" src={PF + post.photo} alt=\"\" />}\r\n\r\n         <div className=\"postInfo\">\r\n            <div className=\"postCats\">\r\n              {post.categories.map((c) => (\r\n                <span className=\"postCat\">{c.name}</span>\r\n              ))}\r\n            </div>\r\n            <Link to={`/post/${post._id}`} className='link'>\r\n              <span className='postTitle'>{post.title}</span>\r\n            </Link>\r\n         \r\n            <hr />\r\n            <span className=\"postDate\">{new Date(post.createdAt).toDateString()}</span>\r\n         </div>\r\n         <p className='postDesc'>{post.desc}</p>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAO,YAAY;AACnB,SAAQA,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,IAAIA,CAAC;EAACC;AAAI,CAAC,EAAE;EACnC,MAAMC,EAAE,GAAG,+BAA+B;;EAE1C;EACA,IAAI,CAACD,IAAI,EAAE;IACT,oBAAOF,OAAA;MAAAI,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACT,IAAI,CAACO,UAAU,CAAC,GAAGP,IAAI,CAACO,UAAU,GAAG,EAAE;EAGxE,oBACET,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAR,QAAA,GACnBF,IAAI,CAACW,KAAK,iBAAIb,OAAA;MAAKY,SAAS,EAAC,SAAS;MAACE,GAAG,EAAEX,EAAE,GAAGD,IAAI,CAACW,KAAM;MAACE,GAAG,EAAC;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnER,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAR,QAAA,gBACtBJ,OAAA;QAAKY,SAAS,EAAC,UAAU;QAAAR,QAAA,EACtBF,IAAI,CAACO,UAAU,CAACO,GAAG,CAAEC,CAAC,iBACrBjB,OAAA;UAAMY,SAAS,EAAC,SAAS;UAAAR,QAAA,EAAEa,CAAC,CAACC;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNR,OAAA,CAACF,IAAI;QAACqB,EAAE,EAAE,SAASjB,IAAI,CAACkB,GAAG,EAAG;QAACR,SAAS,EAAC,MAAM;QAAAR,QAAA,eAC7CJ,OAAA;UAAMY,SAAS,EAAC,WAAW;UAAAR,QAAA,EAAEF,IAAI,CAACmB;QAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eAEPR,OAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNR,OAAA;QAAMY,SAAS,EAAC,UAAU;QAAAR,QAAA,EAAE,IAAIkB,IAAI,CAACpB,IAAI,CAACqB,SAAS,CAAC,CAACC,YAAY,CAAC;MAAC;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACNR,OAAA;MAAGY,SAAS,EAAC,UAAU;MAAAR,QAAA,EAAEF,IAAI,CAACuB;IAAI;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACkB,EAAA,GAhCuBzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}